(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{hBbZ:function(e,t,n){"use strict";var r=new Map;var i="undefined"==typeof window;function o(e,t){return Object.assign({mixins:[{beforeCreate:function(){this.cleanupHandlers=[];var t=function(){var e=function(){},t=new Promise((function(t){e=t}));return{hydrate:e,hydrationPromise:t}}(),n=t.hydrate,r=t.hydrationPromise;this.Nonce=function(e){var t=e.component,n=e.hydrationPromise;return i?t:function(){return n.then((function(){return function(e){return"function"==typeof e}(e=t)?e().then((function(e){return e.default})):e;var e}))}}({component:e,hydrationPromise:r}),this.hydrate=n,this.hydrationPromise=r},beforeDestroy:function(){this.cleanup()},mounted:function(){var e=this;if(this.$el.nodeType!==Node.COMMENT_NODE){if(!this.never){if(this.whenVisible){var t=function(e){if("undefined"==typeof IntersectionObserver)return null;var t=JSON.stringify(e);if(r.has(t))return r.get(t);var n=new IntersectionObserver((function(e){e.forEach((function(e){(e.isIntersecting||e.intersectionRatio>0)&&e.target.hydrate&&e.target.hydrate()}))}),e);return r.set(t,n),n}(!0!==this.whenVisible?this.whenVisible:void 0);if(!t)return void this.hydrate();this.$el.hydrate=this.hydrate;var n=function(){return t.unobserve(e.$el)};return this.cleanupHandlers.push(n),this.hydrationPromise.then(n),void t.observe(this.$el)}if(this.whenIdle){if(!("requestIdleCallback"in window)||!("requestAnimationFrame"in window))return void this.hydrate();var i=requestIdleCallback((function(){requestAnimationFrame(e.hydrate)}),{timeout:this.idleTimeout}),o=function(){return cancelIdleCallback(i)};this.cleanupHandlers.push(o),this.hydrationPromise.then(o)}if(this.interactionEvents&&this.interactionEvents.length){var s={capture:!0,once:!0,passive:!0};this.interactionEvents.forEach((function(t){e.$el.addEventListener(t,e.hydrate,s);e.cleanupHandlers.push((function(){e.$el.removeEventListener(t,e.hydrate,s)}))}))}}}else this.hydrate()},methods:{cleanup:function(){this.cleanupHandlers.forEach((function(e){return e()}))}},render:function(e){return e(this.Nonce,{attrs:this.$attrs,on:this.$listeners,scopedSlots:this.$scopedSlots},this.$slots.default)}}]},t)}var s=o({render:function(){return this.$slots.default}},{props:{idleTimeout:{default:2e3,type:Number},never:{type:Boolean},onInteraction:{type:[Array,Boolean,String]},triggerHydration:{default:!1,type:Boolean},whenIdle:{type:Boolean},whenVisible:{type:[Boolean,Object]}},computed:{interactionEvents:function(){return this.onInteraction?!0===this.onInteraction?["focus"]:Array.isArray(this.onInteraction)?this.onInteraction:[this.onInteraction]:[]}},watch:{triggerHydration:{immediate:!0,handler:function(e){e&&this.hydrate()}}}});t.a=s},mgTL:function(e,t,n){"use strict";n.r(t);var r=n("ro2s"),i=n("hBbZ"),o={metaInfo:{title:"Cursos"},components:{Card:r.a,LazyHydrate:i.a}},s=n("KHd+"),a=null,u=Object(s.a)(o,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("Layout",[n("div",{staticClass:"grid items-center grid-flow-row grid-cols-1 auto-rows-max lg:grid-cols-4"},e._l(e.$page.courses.edges,(function(t){return n("div",{key:t.node.id},[n("LazyHydrate",{attrs:{"when-visible":""}},[n("Card",{attrs:{name:t.node.name,code:"",url:e.$url("courses/"+t.node.id)}})],1)],1)})),0)])}),[],!1,null,null,null);"function"==typeof a&&a(u);t.default=u.exports}}]);